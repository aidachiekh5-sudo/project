load("D:/B2B-SaaS-Churn-Prediction-main/B2B-SaaS-Churn-Prediction-main/my work/train_copy_dataset.csv")
your_data <- read.csv(file.choose())
View(your_data)
train_copy <- read.csv(file.choose())
rm(your_data)
View(train_copy)
getwd()
write.csv(test, "test.csv")
list.files(pattern = "\\.RData$")
file.exists(".RData")
View(train_copy)
test <- read.csv(file.choose())
View(train_copy)
View(test)
IQR(train_copy$MRR)
tapply(train_copy$MRR, train_copy$CHURN_LABEL, IQR)
skewness(train_copy$MRR)
library(e1071)
# Skewness
skewness(train_copy$MRR)
tapply(train_copy$MRR, train_copy$CHURN_LABEL, skewness, na.rm = TRUE) # For skewness
prop.table(table(b2b_data4$CHURN_LABEL))       # Original dataset
b2b_data4 <- read.csv(file.choose())
b2b_data4 <- read.csv(file.choose())
library(ggplot2)
ggplot(data = train_copy, aes(x = AVG_MONTHLY_LOGINS)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
labs(title = "Histogram of Average Monthly Logins",
x = "Average Monthly Logins", y = "Count") +
theme_minimal()
summary(train_copy$AVG_MONTHLY_LOGINS)
#plots: histogram
ggplot(data = b2b_data4, aes(x = AVG_MONTHLY_LOGINS)) +
geom_histogram(aes(y = ..density..),
binwidth = 70,
fill = "#4fa3c7",
color = "black",
alpha = 0.7) +
geom_density(color = "#d62828", size = 1.2) +
labs(title = "Distribution of Average Monthly Logins",
x = "Average Monthly Logins",
y = "Density") +
xlim(0, 1500) +
theme_minimal(base_size = 13)
ggplot(data = b2b_data4, aes(x = AVG_MONTHLY_LOGINS)) +
geom_histogram(binwidth = 70,
fill = "#4fa3c7",
color = "black",
alpha = 0.8,
boundary = 0,
closed = "left") +
labs(title = "Histogram of Average Monthly Logins",
x = "Average Monthly Logins",
y = "Count") +
xlim(100, 1500) +
theme_minimal(base_size = 13)
ggplot(b2b_data4, aes(x = AVG_MONTHLY_LOGINS)) +
geom_histogram(binwidth = 70, fill = "#69b3a2", color = "white", boundary = 0) +
labs(
title = "Distribution of Average Monthly Logins",
x = "Average Monthly Logins",
y = "Number of Users"
) +
xlim(100, 1500) +
theme_minimal(base_size = 13)
ggplot(b2b_data4, aes(x = AVG_MONTHLY_LOGINS)) +
geom_histogram() +
labs(title = "Histogram of Average Monthly Logins",
x = "Average Monthly Logins",
y = "Count")
ggplot(b2b_data4, aes(x = AVG_MONTHLY_LOGINS)) +
geom_histogram(binwidth = 50, fill = "steelblue", color = "black") +
labs(title = "Histogram with Custom Binwidth and Colors",
x = "Average Monthly Logins",
y = "Count")
ggplot(b2b_data4, aes(x = AVG_MONTHLY_LOGINS)) +
geom_histogram(aes(y = ..density..), binwidth = 50, fill = "lightblue", color = "black", alpha = 0.6) +
geom_density(color = "red", size = 1) +
labs(title = "Histogram with Density Overlay",
x = "Average Monthly Logins",
y = "Density")
ggplot(b2b_data4, aes(x = AVG_MONTHLY_LOGINS)) +
geom_histogram(breaks = seq(0, 1500, by = 70),   # custom bin edges from 0 to 1500 by 70
fill = "lightblue",
color = "white",
closed = "left") +               # bins include left edge, exclude right
labs(title = "Average Monthly Logins Distribution",
x = "Average Monthly Logins",
y = "Count") +
theme_minimal()
library(ggplot2)
ggplot(b2b_data4, aes(x = AVG_MONTHLY_LOGINS)) +
geom_histogram(breaks = seq(100, 1500, by = 75),         # bins of width 75 from 100 to 1500
aes(y = ..density..),
fill = "#69b3a2",                          # calm teal color
color = "white",
closed = "left",
alpha = 0.85) +
geom_density(color = "#404080", size = 1.2) +             # smooth dark blue density curve
geom_vline(xintercept = c(200.1, 363.6, 451.6, 591.1),    # quartiles + mean vertical lines
linetype = "dashed",
color = c("#f4a261", "#e76f51", "#2a9d8f", "#264653"),
size = 0.8) +
labs(title = "Distribution of Average M
library(ggplot2)
ggplot(b2b_data4, aes(x = AVG_MONTHLY_LOGINS)) +
geom_histogram(breaks = seq(100, 1500, by = 75),         # bins of width 75 from 100 to 1500
aes(y = ..density..),
fill = "#69b3a2",                          # calm teal color
color = "white",
ggplot(b2b_data4, aes(x = AVG_MONTHLY_LOGINS)) +
geom_histogram(breaks = seq(100, 1500, by = 75),
aes(y = ..density..),
fill = "#69b3a2",
color = "white",
closed = "left",
alpha = 0.85) +
geom_density(color = "#404080", size = 1.2) +
geom_vline(xintercept = c(200.1, 363.6, 451.6, 591.1),
linetype = "dashed",
color = c("#f4a261", "#e76f51", "#2a9d8f", "#264653"),
size = 0.8) +
labs(title = "Distribution of Average Monthly Logins",
subtitle = "Histogram with Density and Key Statistics",
x = "Average Monthly Logins",
y = "Density") +
xlim(100, 1500) +
theme_minimal(base_size = 14)
library(ggplot2)
ggplot(b2b_data4, aes(x = AVG_MONTHLY_LOGINS)) +
geom_histogram(binwidth = 75,
fill = "#a8dadc",   # light pastel blue
color = "white",    # white border for smooth separation
alpha = 0.9) +
labs(title = "Frequency Histogram of Average Monthly Logins",
x = "Average Monthly Logins",
y = "Count") +
xlim(100, 1500) +
theme_minimal(base_size = 14)
summary(train_copy$AVG_MONTHLY_LOGINS)
library(ggplot2)
ggplot(b2b_data4, aes(x = AVG_MONTHLY_LOGINS)) +
geom_density(fill = "#a8dadc", color = "#1d3557", alpha = 0.7, size = 1) +
labs(title = "Kernel Density Plot of Average Monthly Logins",
x = "Average Monthly Logins",
y = "Density") +
xlim(100, 1500) +
theme_minimal(base_size = 14)
library(ggplot2)
ggplot(b2b_data4, aes(x = "", y = AVG_MONTHLY_LOGINS)) +
geom_boxplot(fill = "#69b3a2", color = "#1d3557", alpha = 0.8, width = 0.4) +
labs(title = "Boxplot of Average Monthly Logins",
x = "",
y = "Average Monthly Logins") +
theme_minimal(base_size = 14)
boxplot(b2b_data4$AVG_MONTHLY_LOGINS,
main = "Overall Average Monthly Logins Distribution",
ylab = "Average Monthly Logins",
col = "lightblue",
outline = TRUE)  # show outliers
ggplot(b2b_data4, aes(x = "", y = AVG_MONTHLY_LOGINS)) +
geom_boxplot(fill = "#69b3a2", color = "#1d3557", alpha = 0.8, width = 0.4) +
labs(title = "Boxplot of Average Monthly Logins",
x = "",
y = "Average Monthly Logins") +
theme_minimal(base_size = 14)
boxplot(b2b_data4$AVG_MONTHLY_LOGINS,
main = "Overall Average Monthly Logins Distribution",
ylab = "Average Monthly Logins",
col = "lightblue",
outline = TRUE)  # show outliers
ggplot(train_copy, aes(x = AVG_MONTHLY_LOGINS)) +
geom_histogram(binwidth = 75,
fill = "#a8dadc",   # light pastel blue
color = "white",    # white border for smooth separation
alpha = 0.9) +
labs(title = "Frequency Histogram of Average Monthly Logins",
x = "Average Monthly Logins",
y = "Count") +
xlim(100, 1500) +
theme_minimal(base_size = 14)
ggplot(train_copy, aes(x = AVG_MONTHLY_LOGINS)) +
geom_histogram(binwidth = 75,
fill = "#a8dadc",   # light pastel blue
color = "white",    # white border for smooth separation
alpha = 0.9) +
labs(title = "Frequency Histogram of Average Monthly Logins",
x = "Average Monthly Logins",
y = "Count") +
xlim(100, 1500) +
theme_minimal(base_size = 14)
library(ggplot2)
ggplot(train_copy, aes(x = AVG_MONTHLY_LOGINS)) +
geom_density(fill = "#a8dadc", color = "#1d3557", alpha = 0.7, size = 1) +
labs(title = "Kernel Density Plot of Average Monthly Logins",
x = "Average Monthly Logins",
y = "Density") +
xlim(100, 1500) +
theme_minimal(base_size = 14)
library(ggplot2)
ggplot(train_copy, aes(x = "", y = AVG_MONTHLY_LOGINS)) +
geom_boxplot(fill = "#69b3a2", color = "#1d3557", alpha = 0.8, width = 0.4) +
labs(title = "Boxplot of Average Monthly Logins",
x = "",
y = "Average Monthly Logins") +
theme_minimal(base_size = 14)
boxplot(b2b_data4$AVG_MONTHLY_LOGINS,
main = "Overall Average Monthly Logins Distribution",
ylab = "Average Monthly Logins",
col = "lightblue",
outline = TRUE)  # show outliers
boxplot(train_copy$AVG_MONTHLY_LOGINS,
main = "Overall Average Monthly Logins Distribution",
ylab = "Average Monthly Logins",
col = "lightblue",
outline = TRUE,
col.out = "red",   # red dots for outliers
pch = 19,          # solid circle
cex = 1.2)         # slightly bigger dots
boxplot(train_copy$AVG_MONTHLY_LOGINS,
main = "Overall Average Monthly Logins Distribution",
ylab = "Average Monthly Logins",
col = "lightblue",
outline = TRUE,
col.out = "red",   # red dots for outliers
pch = 19,          # solid circle
cex = 0.2)         # slightly bigger dots
boxplot(train_copy$AVG_MONTHLY_LOGINS,
main = "Overall Average Monthly Logins Distribution",
ylab = "Average Monthly Logins",
col = "lightblue",
outline = TRUE,
col.out = "red",   # red dots for outliers
pch = 19,          # solid circle
cex = 0.8)         # slightly bigger dots
boxplot(train_copy$AVG_MONTHLY_LOGINS,
main = "Overall Average Monthly Logins Distribution",
ylab = "Average Monthly Logins",
col = "lightblue",
outline = TRUE,
col.out = "red",   # red dots for outliers
pch = 25,          # solid circle
cex = 0.8)         # slightly bigger dots
boxplot(train_copy$AVG_MONTHLY_LOGINS,
main = "Overall Average Monthly Logins Distribution",
ylab = "Average Monthly Logins",
col = "lightblue",
outline = TRUE,
col.out = "red",   # red dots for outliers
pch = 10,          # solid circle
cex = 0.8)         # slightly bigger dots
boxplot(train_copy$AVG_MONTHLY_LOGINS,
main = "Overall Average Monthly Logins Distribution",
ylab = "Average Monthly Logins",
col = "lightblue",
outline = TRUE,
col.out = "red",   # red dots for outliers
pch = 19,          # solid circle
cex = 0.8)         # slightly bigger dots
boxplot(train_copy$AVG_MONTHLY_LOGINS,
main = "Overall Average Monthly Logins Distribution",
ylab = "Average Monthly Logins",
col = "lightblue",
outline = TRUE,
col.out = "red",   # red dots for outliers
pch = 21,          # solid circle
cex = 0.8)         # slightly bigger dots
boxplot(train_copy$AVG_MONTHLY_LOGINS,
main = "Overall Average Monthly Logins Distribution",
ylab = "Average Monthly Logins",
col = "lightblue",
outline = TRUE,
col.out = "red",   # red dots for outliers
pch = 21,          # solid circle
cex = 1.2)         # slightly bigger dots
boxplot(b2b_data4$AVG_MONTHLY_LOGINS,
main = "Overall Average Monthly Logins Distribution",
ylab = "Average Monthly Logins",
col = "lightblue",
outline = TRUE)  # show outliers
boxplot(train_copy$AVG_MONTHLY_LOGINS,
main = "Overall Average Monthly Logins Distribution",
ylab = "Average Monthly Logins",
col = "lightblue",
outline = TRUE,
col.out = "red",   # red dots for outliers
pch = 21,          # solid circle
cex = 1.2)         # slightly bigger dots
library(ggplot2)
ggplot(train_copy, aes(x = "", y = AVG_MONTHLY_LOGINS)) +
geom_boxplot(fill = "#69b3a2", color = "#1d3557", alpha = 0.8, width = 0.4) +
labs(title = "Boxplot of Average Monthly Logins",
x = "",
y = "Average Monthly Logins") +
theme_minimal(base_size = 14)
boxplot(train_copy$AVG_MONTHLY_LOGINS,
main = "Overall Average Monthly Logins Distribution",
ylab = "Average Monthly Logins",
col = "lightblue",
outline = TRUE,
col.out = "red",   # red dots for outliers
pch = 21,          # solid circle
cex = 1.2)         # slightly bigger dots
ggplot(train_copy, aes(x = CHURN_LABEL, y = AVG_MONTHLY_LOGINS, fill = CHURN_LABEL)) +
geom_violin(trim = FALSE, alpha = 0.5, color = "black") +
geom_boxplot(width = 0.1, outlier.shape = NA, fill = "white") +
labs(
title = "Distribution of Average Monthly Logins by Churn Status",
x = "Churn Status",
y = "Average Monthly Logins"
) +
theme_minimal() +
scale_fill_brewer(palette = "Pastel1")
# Step 1: Convert CHURN_LABEL to readable factor
train_copy$CHURN_LABEL <- factor(train_copy$CHURN_LABEL,
levels = c(0, 1),
labels = c("Non-Churner", "Churner"))
library(ggplot2)
ggplot(train_copy, aes(x = CHURN_LABEL, y = AVG_MONTHLY_LOGINS, fill = CHURN_LABEL)) +
geom_violin(trim = FALSE, alpha = 0.5, color = "black") +  # Distribution shape
geom_boxplot(width = 0.1, outlier.shape = NA, fill = "white") +  # Summary stats inside violin
labs(
title = "Distribution of Average Monthly Logins by Churn Status",
x = "Churn Status",
y = "Average Monthly Logins"
) +
scale_fill_brewer(palette = "Pastel1") +
theme_minimal() +
theme(
legend.position = "none",            # Optional: removes redundant legend
axis.text.x = element_text(size = 12),  # Clearer x-axis labels
plot.title = element_text(hjust = 0.5)  # Center the title
)
# Load the library
library(ggplot2)
# Make sure your churn label is a factor with clear names
train_copy$CHURN_LABEL <- factor(train_copy$CHURN_LABEL,
levels = c(0, 1),
labels = c("Non-Churner", "Churner"))
# Create 1 violin plot
ggplot(train_copy, aes(x = CHURN_LABEL, y = AVG_MONTHLY_LOGINS, fill = CHURN_LABEL)) +
geom_violin(trim = FALSE, alpha = 0.5, color = "black") +           # Violin shape = distribution
geom_boxplot(width = 0.1, outlier.shape = NA, fill = "white") +    # Box inside violin = summary stats
labs(
title = "Avg Monthly Logins by Churn Status",
x = "Churn Status",
y = "Average Monthly Logins"
) +
scale_fill_brewer(palette = "Pastel1") +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.text = element_text(size = 12)
)
library(ggplot2)
# Label the churn categories
train_copy$CHURN_LABEL <- factor(train_copy$CHURN_LABEL,
levels = c(0, 1),
labels = c("Non-Churner", "Churner"))
# Make the violin plot
ggplot(train_copy, aes(x = CHURN_LABEL, y = AVG_MONTHLY_LOGINS, fill = CHURN_LABEL)) +
geom_violin(trim = FALSE, alpha = 0.7, color = "black") +               # Shape of distribution
geom_boxplot(width = 0.1, outlier.shape = NA, fill = "white") +        # Boxplot inside
labs(
title = "Average Monthly Logins by Churn Status",
x = "",
y = "Average Monthly Logins"
) +
scale_fill_manual(values = c("Non-Churner" = "#66c2a5",  # greenish
"Churner" = "#fc8d62")) +    # orange/red
theme_minimal() +
theme(
legend.position = "top",
legend.title = element_blank(),
axis.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")
)
summary(train_copy$AVG_MONTHLY_LOGINS)
sum(is.na(train_copy$AVG_MONTHLY_LOGINS))
# Remove rows where AVG_MONTHLY_LOGINS is NA
clean_data <- train_copy[!is.na(train_copy$AVG_MONTHLY_LOGINS), ]
# Then run your plot on clean_data
ggplot(clean_data, aes(x = CHURN_LABEL, y = AVG_MONTHLY_LOGINS, fill = CHURN_LABEL)) +
geom_violin(trim = FALSE, alpha = 0.7, color = "black") +
geom_boxplot(width = 0.1, outlier.shape = NA, fill = "white") +
labs(
title = "Average Monthly Logins by Churn Status",
x = "",
y = "Average Monthly Logins"
) +
scale_fill_manual(values = c("Non-Churner" = "#66c2a5", "Churner" = "#fc8d62")) +
theme_minimal() +
theme(
legend.position = "top",
legend.title = element_blank(),
axis.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")
)
# Q-Q Plot for normality
qqnorm(train_copy$AVG_MONTHLY_LOGINS, main = "Q-Q Plot: AVG_MONTHLY_LOGINS")
qqline(train_copy$AVG_MONTHLY_LOGINS, col = "red", lwd = 2)
# Q-Q Plot for normality
qqnorm(train_copy$AVG_MONTHLY_LOGINS, main = "Q-Q Plot: AVG_MONTHLY_LOGINS")
qqline(train_copy$AVG_MONTHLY_LOGINS, col = "red", lwd = 3)
# Q-Q Plot for normality
qqnorm(train_copy$AVG_MONTHLY_LOGINS, main = "Q-Q Plot: AVG_MONTHLY_LOGINS")
qqline(train_copy$AVG_MONTHLY_LOGINS, col = "red", lwd = 2)
# Q-Q Plot for normality
qqnorm(train_copy$AVG_MONTHLY_LOGINS, main = "Q-Q Plot: Average Monthly Logins)
qqline(train_copy$AVG_MONTHLY_LOGINS, col = "red", lwd = 2)
# Q-Q Plot for normality
qqnorm(train_copy$AVG_MONTHLY_LOGINS, main = "Q-Q Plot: AVG_MONTHLY_LOGINS)
qqline(train_copy$AVG_MONTHLY_LOGINS, col = "red", lwd = 2)
# Q-Q Plot for normality
qqnorm(train_copy$AVG_MONTHLY_LOGINS, main = "Q-Q Plot: AVG_MONTHLY_LOGINS)
qqline(train_copy$AVG_MONTHLY_LOGINS, col = "red", lwd = 2)
# Q-Q Plot for normality
qqnorm(train_copy$AVG_MONTHLY_LOGINS, main = "Q-Q Plot: AVG_MONTHLY_LOGINS")
qqline(train_copy$AVG_MONTHLY_LOGINS, col = "red", lwd = 2)
